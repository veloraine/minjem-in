image: gradle:7.4-jdk11-alpine

variables:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false'
#  POSTGRES_ENABLED: "false"
#  DISABLE_SPRING_DATASOURCE_URL: "true"
  DATABASE_URL: jdbc:postgresql://postgres:5432/postgres
  POSTGRES_USER: postgres
  POSTGRES_DB: postgres
  POSTGRES_PASSWORD: postgres
  SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
  SPRING_DATASOURCE_USER: postgres
  SPRING_DATASOURCE_PASSWORD: postgres


before_script:
  - echo "Semoga hasil code yang di push akan berlajan dengan baik dan lancar."
  - echo `pwd`
  - export GRADLE_USER_HOME=`pwd`/.gradle
  # Remove caches
  - rm -f  .gradle/caches/modules-2/modules-2.lock
  - rm -fr .gradle/caches/*/plugin-resolution/

stages:
  - deploy

deploy:
  stage: deploy
  only:
    - staging
  image: ruby:latest
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_NAME_STAGING --api-key=$HEROKU_API_KEY
    - export HEROKU_API_KEY=$HEROKU_API_KEY
    - heroku run --app $HEROKU_APP_NAME_STAGING migrate